/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.danielcampos.redgym.proyecto;

import com.danielcampos.redgym.Clientespk.ClientePlan;
import com.danielcampos.redgym.Clientespk.EntidadClientes;
import com.danielcampos.redgym.Clientespk.EntidadPlan;
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import com.danielcampos.redgym.Clientespk.ClientesDAO;
import static com.danielcampos.redgym.proyecto.Menu.Menu1;
import java.awt.Dimension;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import rojerusan.necesario.RSScrollBar;


/**
 *
 * @author Daniel Gerardo Campos Garc√≠a 
 * Class PlanesClientes. Se crea para Compar los planes de los clientes 
 * Variables: Excritura de camello abreviando su tipo de componente seguido de su nombre de variable
 * Metodos: Exritura de camello (El nombre debe se ser sacado de la funcion que tiene el metodo)
 */
public class PlanesClientes extends javax.swing.JInternalFrame {

    public static String fechaActual() {
        Date fecha = new Date();
        DateFormat formatofecha = new SimpleDateFormat("yyyy-MM-dd");
        return formatofecha.format(fecha);

    }
    String r;
    PreparedStatement ps;
    ResultSet rs;
    Conexion con = new Conexion();
    Connection acceso;
    EntidadEntrenador En = new EntidadEntrenador();
    ClientePlan v = new ClientePlan();
    EntidadClientes cl = new EntidadClientes();
    EntidadPlan eP = new EntidadPlan();
    ClientesDAO cdao = new ClientesDAO();

    public PlanesClientes() {
        initComponents();
        setBorder(null);
        this.txtCompra.setText(fechaActual());
        ((javax.swing.plaf.basic.BasicInternalFrameUI) this.getUI()).setNorthPane(null);

        cmbMostrarEntidades();

        jScrollPane1.getViewport().setBackground(Color.WHITE);
    }
/**
 * Carga todas las entidades en los ComboBox 
 */
    void cmbMostrarEntidades() {

        DefaultComboBoxModel modeloCliente = new DefaultComboBoxModel(cl.mostrarCliente());
        cmbCliente.setModel(modeloCliente);
        DefaultComboBoxModel modeloEntrenador = new DefaultComboBoxModel(En.mostrarEntrenador());
        cmbEn.setModel(modeloEntrenador);
        DefaultComboBoxModel modeloPlan = new DefaultComboBoxModel(eP.mostrarPlan());
        cmbPlan.setModel(modeloPlan);
        Color myColor = new Color(255, 153, 102);
        Color myColo = new Color(255, 51, 51);
        tablaPlanes.setBackground(myColor);
        tablaPlanes.getTableHeader().setBackground(myColo);
        tablaPlanes.getTableHeader().setForeground(Color.black);
        tablaPlanes.getTableHeader().setOpaque(false);
        tablaPlanes.getTableHeader().setFont(new java.awt.Font("Times New Roman", 3, 15));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbEn = new javax.swing.JComboBox<>();
        cmbCliente = new javax.swing.JComboBox<>();
        cmbPlan = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPlanes = new rojerusan.RSTableMetro();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCompra = new javax.swing.JTextField();
        txtFechaAnterior = new javax.swing.JTextField();
        txtFechaNueva = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtDias = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDiasRestantes = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setClosable(true);
        setIconifiable(true);

        cmbEn.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        cmbEn.setBorder(null);
        cmbEn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbEnMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmbEnMouseExited(evt);
            }
        });

        cmbCliente.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        cmbCliente.setBorder(null);
        cmbCliente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbClienteItemStateChanged(evt);
            }
        });
        cmbCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbClienteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmbClienteMouseExited(evt);
            }
        });

        cmbPlan.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        cmbPlan.setBorder(null);
        cmbPlan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbPlanItemStateChanged(evt);
            }
        });
        cmbPlan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cmbPlanMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cmbPlanMouseExited(evt);
            }
        });

        tablaPlanes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Entrenador", "Cliente", "Plan", "Compra", "Vencimiento", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPlanes.setColorBackgoundHead(new java.awt.Color(0, 102, 255));
        tablaPlanes.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        tablaPlanes.setColorBordeHead(new java.awt.Color(0, 102, 204));
        tablaPlanes.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        tablaPlanes.setFuenteFilas(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        tablaPlanes.setFuenteFilasSelect(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        tablaPlanes.setFuenteHead(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        tablaPlanes.setGridColor(new java.awt.Color(204, 255, 255));
        tablaPlanes.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tablaPlanes.setOpaque(false);
        jScrollPane1.setViewportView(tablaPlanes);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Fecha de compra:");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel2.setText("Dias restantes:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel3.setText("Vencimiento:");

        txtCompra.setEditable(false);
        txtCompra.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        txtCompra.setForeground(new java.awt.Color(0, 153, 255));
        txtCompra.setBorder(null);
        txtCompra.setOpaque(false);

        txtFechaAnterior.setEditable(false);
        txtFechaAnterior.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        txtFechaAnterior.setForeground(new java.awt.Color(0, 153, 255));
        txtFechaAnterior.setBorder(null);
        txtFechaAnterior.setOpaque(false);
        txtFechaAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaAnteriorActionPerformed(evt);
            }
        });

        txtFechaNueva.setEditable(false);
        txtFechaNueva.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        txtFechaNueva.setForeground(new java.awt.Color(0, 153, 255));
        txtFechaNueva.setBorder(null);
        txtFechaNueva.setOpaque(false);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel4.setText("Fecha anterior:");

        txtDias.setEditable(false);
        txtDias.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        txtDias.setForeground(new java.awt.Color(0, 153, 255));
        txtDias.setBorder(null);
        txtDias.setOpaque(false);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("Dias nuevos restantes:");

        txtDiasRestantes.setEditable(false);
        txtDiasRestantes.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        txtDiasRestantes.setForeground(new java.awt.Color(0, 153, 255));
        txtDiasRestantes.setBorder(null);
        txtDiasRestantes.setOpaque(false);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel7.setText("Precio:");

        txtPrecio.setEditable(false);
        txtPrecio.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        txtPrecio.setForeground(new java.awt.Color(0, 153, 255));
        txtPrecio.setBorder(null);
        txtPrecio.setOpaque(false);

        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel1MouseExited(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 3, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Comprar");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
        );

        btnCerrar.setBackground(new java.awt.Color(255, 255, 255));
        btnCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCerrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCerrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCerrarMouseExited(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("X");

        javax.swing.GroupLayout btnCerrarLayout = new javax.swing.GroupLayout(btnCerrar);
        btnCerrar.setLayout(btnCerrarLayout);
        btnCerrarLayout.setHorizontalGroup(
            btnCerrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnCerrarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 9, Short.MAX_VALUE)
                .addContainerGap())
        );
        btnCerrarLayout.setVerticalGroup(
            btnCerrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btnCerrarLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel9))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbEn, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbPlan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFechaAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFechaNueva, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDiasRestantes, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(47, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbEn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(txtCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel2)))))
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFechaAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(txtDiasRestantes, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbPlan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(txtFechaNueva, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void txtFechaAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaAnteriorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaAnteriorActionPerformed
    /**
     * Metodo para abrir un JInternalFrame entrado en un JDesktop panel
     * @param frame 
     */
    void centrarVentana(JInternalFrame frame) {

        Menu1.add(frame);
        Dimension dimension = Menu1.getSize();
        Dimension Dframe = frame.getSize();
        frame.setLocation((dimension.width - Dframe.width) / 2, (dimension.height - Dframe.height));
        frame.show();

    }
    private void cmbClienteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbClienteItemStateChanged
        int calcular;
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            EntidadPlan estt = (EntidadPlan) cmbPlan.getSelectedItem();
            EntidadClientes est = (EntidadClientes) cmbCliente.getSelectedItem();
            txtFechaAnterior.setText("" + est.getFplan());
            if (txtFechaAnterior.equals("") || txtFechaAnterior.getText().equals("null")) {
                txtFechaAnterior.setText(txtCompra.getText());

            }
            String inicio = txtCompra.getText();

            String fin = txtFechaAnterior.getText();

            cdao.calcularDias(inicio, fin);
            int dia = estt.getDias();
            int nuevo = Integer.parseInt(txtDias.getText());
            calcular = nuevo + dia;
            txtDiasRestantes.setText(String.valueOf(calcular));
            Date cal = calcularNuevaFecha(new Date(), calcular);
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String date = df.format(cal);
            txtFechaNueva.setText(date);
            cargarPlanesEntidadClientes();
        }
    }//GEN-LAST:event_cmbClienteItemStateChanged
    void cargarPlanesEntidadClientes() {
        EntidadClientes est = (EntidadClientes) cmbCliente.getSelectedItem();
        Color myColor = new Color(120, 255, 255);
        tablaPlanes.setBackground(myColor);
        tablaPlanes.getTableHeader().setBackground(myColor);
        tablaPlanes.getTableHeader().setForeground(Color.black);
        tablaPlanes.getTableHeader().setOpaque(false);
        tablaPlanes.getTableHeader().setFont(new java.awt.Font("Times New Roman", 3, 12));
        DefaultTableModel model = (DefaultTableModel) tablaPlanes.getModel();
        model.setRowCount(0);
        Conexion cc = new Conexion();
        Connection cn = cc.Conexion();
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int colu;
        try {
            ps = cn.prepareStatement("SELECT id_Entrenador,Id_Cliente,Id_Plan,FechaCompra,FechaVencimiento,monto FROM ClientePlan WHERE Id_Cliente=?");
            ps.setString(1, est.getUser());
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            colu = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[colu];
                for (int indice = 0; indice < colu; indice++) {
                    fila[indice] = rs.getString(indice + 1);
                }
                model.addRow(fila);
            }
            tablaPlanes.setModel(model);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    /** 
     * @param evt 
     * Al precionar un plan en el ComboBoxPlan va traer el precio del plan y va a sumar los dias del plan y los dias restantes para sacar una nueva fecha de Vencimiento
     */
    private void cmbPlanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbPlanItemStateChanged
        int calcular;

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            EntidadPlan est = (EntidadPlan) cmbPlan.getSelectedItem();
            //txtDnuevo.setText("" + est.getDias());

            txtPrecio.setText("" + est.getValor());

            int dia = est.getDias();
            int nuevo = Integer.parseInt(txtDias.getText());
            calcular = nuevo + dia;
            txtDiasRestantes.setText(String.valueOf(calcular));
            Date cal = calcularNuevaFecha(new Date(), calcular);
            SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            String date = df.format(cal);
            txtFechaNueva.setText(date);
            String inicio = txtCompra.getText();

            String fin = txtFechaAnterior.getText();

            cdao.calcularDias(inicio, fin);

        }
    }
/**
 * Metodo para sumar los dias a la dias de la fecha actual para posteriormente sacar el formato FechaNueva(yyyy-MM-dd)
 * @param fecha
 * Fecha Actual
 * @param dias
 * Dias a sumar
 * @return 
 */
    public Date calcularNuevaFecha(Date fecha, int dias) {
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(fecha);
        calendar.add(Calendar.DAY_OF_YEAR, dias);
        return calendar.getTime();


    }//GEN-LAST:event_cmbPlanItemStateChanged
    void guardarPlanCiente() {
        EntidadEntrenador en = (EntidadEntrenador) cmbEn.getSelectedItem();
        EntidadClientes est = (EntidadClientes) cmbCliente.getSelectedItem();
        EntidadPlan p = (EntidadPlan) cmbPlan.getSelectedItem();
        int idE = en.getIdE();
        String idC = est.getUser();
        int idP = p.getId();
        String fechac = txtCompra.getText();
        String fechaV = txtFechaNueva.getText();

        double monto = Double.parseDouble(txtPrecio.getText());

        v.setUser(idE);
        v.setIdC(idC);
        v.setIdP(idP);
        v.setFechaCompra(fechac);
        v.setFechaVencimiento(fechaV);
        v.setPrecio(monto);
        cdao.guardarPlan(v);
    }

    void guardarFecha() {
        EntidadClientes est = (EntidadClientes) cmbCliente.getSelectedItem();
        int idC = est.getId();
        String fechaV = txtFechaNueva.getText();
        String sql = "UPDATE Clientes SET fechaPlan=? WHERE Id_Cliente=?";

        try {
            Conexion cc = new Conexion();
            Connection cn = cc.Conexion();
            PreparedStatement pst = cn.prepareStatement(sql);

            pst.setString(1, fechaV);
            pst.setInt(2, idC);

            int n = pst.executeUpdate();
            if (n > 0) {
                JOptionPane.showMessageDialog(null, "Registro Modificado con exito!");
            }

        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null, ex.toString());
        }
    }
    private void cmbEnMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbEnMouseEntered
        cmbEn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)));

    }//GEN-LAST:event_cmbEnMouseEntered

    private void cmbClienteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbClienteMouseEntered
        cmbCliente.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)));

    }//GEN-LAST:event_cmbClienteMouseEntered

    private void cmbPlanMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbPlanMouseEntered
        cmbPlan.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, null, new java.awt.Color(102, 102, 102), new java.awt.Color(102, 102, 102)));

    }//GEN-LAST:event_cmbPlanMouseEntered

    private void cmbEnMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbEnMouseExited
        cmbEn.setBorder(null);

    }//GEN-LAST:event_cmbEnMouseExited

    private void cmbClienteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbClienteMouseExited
        cmbCliente.setBorder(null);
    }//GEN-LAST:event_cmbClienteMouseExited

    private void cmbPlanMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbPlanMouseExited
        cmbPlan.setBorder(null);

    }//GEN-LAST:event_cmbPlanMouseExited

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        guardarPlanCiente();
        guardarFecha();
        cargarPlanesEntidadClientes();
    }//GEN-LAST:event_jPanel1MouseClicked

    private void jPanel1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseEntered
        jPanel1.setBackground(new java.awt.Color(0, 153, 255));
    }//GEN-LAST:event_jPanel1MouseEntered

    private void jPanel1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseExited
        jPanel1.setBackground(new java.awt.Color(0, 102, 204));
    }//GEN-LAST:event_jPanel1MouseExited

    private void btnCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMouseClicked
        dispose();
    }//GEN-LAST:event_btnCerrarMouseClicked

    private void btnCerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMouseEntered
        btnCerrar.setBackground(new java.awt.Color(255, 0, 0));
    }//GEN-LAST:event_btnCerrarMouseEntered

    private void btnCerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMouseExited
        btnCerrar.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_btnCerrarMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnCerrar;
    public static javax.swing.JComboBox<String> cmbCliente;
    private javax.swing.JComboBox<String> cmbEn;
    private javax.swing.JComboBox<String> cmbPlan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private rojerusan.RSTableMetro tablaPlanes;
    public static javax.swing.JTextField txtCompra;
    public static javax.swing.JTextField txtDias;
    private javax.swing.JTextField txtDiasRestantes;
    public static javax.swing.JTextField txtFechaAnterior;
    private javax.swing.JTextField txtFechaNueva;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
