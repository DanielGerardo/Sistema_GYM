/*

 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.danielcampos.redgym.proyecto;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.sql.Connection;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import static java.time.temporal.ChronoUnit.DAYS;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JLayeredPane;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import static com.danielcampos.redgym.proyecto.Menu.IconIngreso;
import static com.danielcampos.redgym.proyecto.Menu.PanelIngreso;
import static com.danielcampos.redgym.proyecto.Menu.PanelGuardar;
import static com.danielcampos.redgym.proyecto.Menu.IconGuardar;

/**
 *
 * @author Daniel Gerardo Campos Garc√≠a
 * Class Ingreso. Se crea como visualizacion para los clientes del momento en el que ingresan al gym y a la hora que salen y ver los productos en venta
 * Variables: Excritura de camello abreviando su tipo de componente seguido de su nombre de variable
 * Metodos: Exritura de camello (El nombre debe se ser sacado de la funcion que tiene el metodo)
 * 
 * 
 */
public class Ingreso extends javax.swing.JFrame {
public static String fechaActual(){
Date fecha = new Date();
DateFormat formatofecha = new SimpleDateFormat("yyyy-MM-dd");
return formatofecha.format(fecha);

}
public static String horaActual(){
Date fecha = new Date();
DateFormat formatofecha = new SimpleDateFormat("HH:mm:ss");
return formatofecha.format(fecha);

}
    public Ingreso() {
        
        initComponents();
        setIconImage(new ImageIcon(getClass().getResource("/img/pesa.png")).getImage()); 
        this.setLocationRelativeTo(null);
        this.setExtendedState(MAXIMIZED_BOTH);
        this.getContentPane().setBackground(Color.WHITE);
        txtUser.requestFocus();
        txtFecha.setText(fechaActual());
        cargarTablaProductos();
        txtFecha.setVisible(false);
        jScrollPane1.getViewport().setBackground(Color.WHITE);
        
       
        
    }
 void cargarTablaProductos() {
        DefaultTableModel model = (DefaultTableModel) tablaProducto.getModel();
        model.setRowCount(0);
        Conexion cc = new Conexion();
        Connection cn = cc.Conexion();
        PreparedStatement ps;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int colu;
        try {
             ps = cn.prepareStatement("SELECT Descripcion,Precio FROM Productos");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            colu = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] fila = new Object[colu];
                for(int indice=0; indice<colu; indice++){
                fila[indice] = rs.getString(indice + 1); 
                }
                model.addRow(fila);
            }
            tablaProducto.setModel(model);
            
            
        
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtApe = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProducto = new rojerusan.RSTableMetro();
        foto = new JPanelWebCam.JPanelWebCam();
        jLabel3 = new javax.swing.JLabel();
        txtUser = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        txtFe = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtVen = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDias = new javax.swing.JTextField();
        horaEntrada = new javax.swing.JTextField();
        horaSalida = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        Panel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cerrar = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setTitle("Ingreso Clientes");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1920, 1080));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel1.setText("Nombre:");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtNom.setEditable(false);
        txtNom.setBackground(new java.awt.Color(255, 255, 255));
        txtNom.setFont(new java.awt.Font("Times New Roman", 3, 22)); // NOI18N
        txtNom.setForeground(new java.awt.Color(51, 153, 255));
        txtNom.setBorder(null);
        txtNom.setCaretColor(new java.awt.Color(51, 153, 255));
        txtNom.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtNom.setDisabledTextColor(new java.awt.Color(51, 153, 255));
        txtNom.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel2.setText("Apellidos:");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtApe.setEditable(false);
        txtApe.setBackground(new java.awt.Color(255, 255, 255));
        txtApe.setFont(new java.awt.Font("Times New Roman", 3, 22)); // NOI18N
        txtApe.setForeground(new java.awt.Color(51, 153, 255));
        txtApe.setBorder(null);
        txtApe.setCaretColor(new java.awt.Color(51, 153, 255));
        txtApe.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtApe.setDisabledTextColor(new java.awt.Color(51, 153, 255));
        txtApe.setOpaque(false);
        txtApe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApeActionPerformed(evt);
            }
        });

        tablaProducto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Productos", "Costo"
            }
        ));
        tablaProducto.setColorBackgoundHead(new java.awt.Color(51, 153, 255));
        tablaProducto.setColorBordeFilas(new java.awt.Color(255, 255, 255));
        tablaProducto.setColorBordeHead(new java.awt.Color(51, 153, 255));
        tablaProducto.setColorFilasBackgound2(new java.awt.Color(255, 255, 255));
        tablaProducto.setColorFilasForeground1(new java.awt.Color(51, 153, 255));
        tablaProducto.setColorFilasForeground2(new java.awt.Color(51, 153, 255));
        tablaProducto.setEnabled(false);
        tablaProducto.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        tablaProducto.setFuenteFilas(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        tablaProducto.setFuenteFilasSelect(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        tablaProducto.setFuenteHead(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        tablaProducto.setIntercellSpacing(new java.awt.Dimension(0, 0));
        tablaProducto.setOpaque(false);
        tablaProducto.setRowHeight(20);
        jScrollPane1.setViewportView(tablaProducto);

        foto.setBackground(java.awt.Color.white);
        foto.setToolTipText("");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel3.setText("User:");

        txtUser.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        txtUser.setForeground(new java.awt.Color(51, 153, 255));
        txtUser.setBorder(null);
        txtUser.setCaretColor(new java.awt.Color(51, 153, 255));
        txtUser.setDisabledTextColor(new java.awt.Color(51, 153, 255));
        txtUser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel4.setText("Fecha Ingreso:");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtFe.setEditable(false);
        txtFe.setBackground(new java.awt.Color(255, 255, 255));
        txtFe.setFont(new java.awt.Font("Times New Roman", 3, 22)); // NOI18N
        txtFe.setForeground(new java.awt.Color(255, 255, 255));
        txtFe.setBorder(null);
        txtFe.setCaretColor(new java.awt.Color(255, 255, 255));
        txtFe.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        txtFe.setDisabledTextColor(new java.awt.Color(51, 153, 255));
        txtFe.setEnabled(false);
        txtFe.setOpaque(false);
        txtFe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFeActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel6.setText("Vencimiento:");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtVen.setEditable(false);
        txtVen.setBackground(new java.awt.Color(255, 255, 255));
        txtVen.setFont(new java.awt.Font("Times New Roman", 3, 22)); // NOI18N
        txtVen.setForeground(new java.awt.Color(255, 255, 255));
        txtVen.setBorder(null);
        txtVen.setCaretColor(new java.awt.Color(255, 255, 255));
        txtVen.setDisabledTextColor(new java.awt.Color(51, 153, 255));
        txtVen.setEnabled(false);
        txtVen.setOpaque(false);
        txtVen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVenActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel7.setText("Dias Restantes:");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtDias.setEditable(false);
        txtDias.setBackground(new java.awt.Color(255, 255, 255));
        txtDias.setFont(new java.awt.Font("Times New Roman", 3, 22)); // NOI18N
        txtDias.setForeground(new java.awt.Color(255, 255, 255));
        txtDias.setBorder(null);
        txtDias.setCaretColor(new java.awt.Color(255, 255, 255));
        txtDias.setDisabledTextColor(new java.awt.Color(51, 153, 255));
        txtDias.setEnabled(false);
        txtDias.setOpaque(false);

        horaEntrada.setEditable(false);
        horaEntrada.setBackground(new java.awt.Color(255, 255, 255));
        horaEntrada.setFont(new java.awt.Font("Times New Roman", 3, 22)); // NOI18N
        horaEntrada.setForeground(new java.awt.Color(255, 255, 255));
        horaEntrada.setBorder(null);
        horaEntrada.setCaretColor(new java.awt.Color(255, 255, 255));
        horaEntrada.setDisabledTextColor(new java.awt.Color(51, 153, 255));
        horaEntrada.setEnabled(false);
        horaEntrada.setOpaque(false);

        horaSalida.setEditable(false);
        horaSalida.setBackground(new java.awt.Color(255, 255, 255));
        horaSalida.setFont(new java.awt.Font("Times New Roman", 3, 22)); // NOI18N
        horaSalida.setForeground(new java.awt.Color(255, 255, 255));
        horaSalida.setBorder(null);
        horaSalida.setCaretColor(new java.awt.Color(255, 255, 255));
        horaSalida.setDisabledTextColor(new java.awt.Color(51, 153, 255));
        horaSalida.setEnabled(false);
        horaSalida.setOpaque(false);

        txtFecha.setEditable(false);
        txtFecha.setBackground(new java.awt.Color(255, 255, 255));
        txtFecha.setFont(new java.awt.Font("Times New Roman", 3, 22)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(255, 255, 255));
        txtFecha.setBorder(null);
        txtFecha.setCaretColor(new java.awt.Color(255, 255, 255));
        txtFecha.setDisabledTextColor(new java.awt.Color(51, 153, 255));
        txtFecha.setEnabled(false);
        txtFecha.setOpaque(false);

        Panel.setBackground(new java.awt.Color(51, 153, 255));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo.png"))); // NOI18N

        cerrar.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        cerrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cerrar.setText("X");
        cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cerrarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cerrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cerrarMouseExited(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/face.png"))); // NOI18N

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/insta.png"))); // NOI18N

        jLabel13.setFont(new java.awt.Font("Gill Sans Ultra Bold", 2, 17)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Red¬¥s Gym");

        jLabel14.setFont(new java.awt.Font("Gill Sans Ultra Bold", 2, 16)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("@gimnasio_reds");

        javax.swing.GroupLayout PanelLayout = new javax.swing.GroupLayout(Panel);
        Panel.setLayout(PanelLayout);
        PanelLayout.setHorizontalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLayout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 596, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addGap(475, 475, 475)
                        .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        PanelLayout.setVerticalGroup(
            PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PanelLayout.createSequentialGroup()
                .addComponent(cerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(PanelLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel8.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel8.setText("Entrada:");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel9.setText("Salida:");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/IngresoGIF.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel2)
                        .addGap(10, 10, 10)
                        .addComponent(txtApe, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(10, 10, 10)
                                .addComponent(txtFe, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtVen, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel7))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(38, 38, 38)
                                .addComponent(horaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(52, 52, 52)
                                .addComponent(horaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(105, 105, 105)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46)
                        .addComponent(jLabel10)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foto, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(jLabel2))
                            .addComponent(txtApe, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtFe, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(102, 102, 102)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtVen, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(65, 65, 65)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(horaEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(4, 4, 4)
                                        .addComponent(jLabel9))
                                    .addComponent(horaSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(226, 226, 226)
                                .addComponent(txtDias, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel10)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(foto, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUserKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            
            horaEntrada.setText(horaActual());
            comprobarVencimiento();
           
        }
    }//GEN-LAST:event_txtUserKeyPressed

    private void txtFeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFeActionPerformed

    private void txtVenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVenActionPerformed

    private void txtApeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApeActionPerformed
 
 
    private void cerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarMouseClicked
          dispose();
        Color cl= new Color(0,117,155);
     PanelIngreso.setBackground(cl);   
     IconIngreso.setIcon(null);
     PanelIngreso.setEnabled(true);
    }//GEN-LAST:event_cerrarMouseClicked

    private void cerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarMouseEntered
        
        cerrar.setForeground(Color.red);
    }//GEN-LAST:event_cerrarMouseEntered

    private void cerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarMouseExited
        cerrar.setForeground(Color.black);
    }//GEN-LAST:event_cerrarMouseExited
/**
 * Este metodo se encarga de buscar al usuario en la BD para que sus datos sean visibles al usuario y verifica si los dias restantes son mayores a 0 para dar ingreso si no manda una alearta
 */
void visualizarUsario(){
int user= Integer.parseInt(txtUser.getText());

  try {                  
            Conexion cc = new Conexion();
            PreparedStatement ps;
            ResultSet rs;
            Connection cn = cc.Conexion();

            ps = cn.prepareStatement("SELECT Nombre,Apellidos,FechaDeIngreso,Fotografia,fechaPlan FROM Clientes WHERE UserName=?");
            ps.setInt(1, user);
            rs = ps.executeQuery();
            while (rs.next()) {
                
                
                txtNom.setText(rs.getString("Nombre"));
                txtApe.setText(rs.getString("Apellidos"));
                txtFe.setText(rs.getString("FechaDeIngreso"));
                byte[] imagen = rs.getBytes("Fotografia");
                foto.setImagen(imagen);
                
                txtVen.setText(rs.getString("fechaPlan"));
                
               calcularDiasRestantes(txtFecha.getText(),txtVen.getText());
               int d = Integer.parseInt(txtDias.getText());
               if(txtVen.getText().equals(fechaActual())|| d <= 0){
               JOptionPane.showMessageDialog(null, "Se termino tu mensualidad");
               }else{
                   horaEntrada();
            txtUser.setText("");}
            }
        } catch (SQLException ex) {
    JOptionPane.showConfirmDialog(null, ex.toString());
        
        }
}
void horaEntrada(){
        String sql = "";
        int Activo = Integer.parseInt(txtUser.getText());
        String nom = txtNom.getText();
        String horaentrada = horaEntrada.getText();
        String fechahoy = txtFecha.getText();
        

        sql = "INSERT INTO Entradas (UserName,nombre,horaEntrada,fechahoy) VALUES (?,?,?,?)";

        try {
            Conexion cc = new Conexion();
        Connection cn = cc.Conexion();
            PreparedStatement p = cn.prepareStatement(sql);
            p.setInt(1, Activo);
            p.setString(2, nom);
            p.setString(3, horaentrada);
            p.setString(4, fechahoy);
     

            int n = p.executeUpdate();
            if (n > 0) {
                
            }

          
            
        } catch (SQLException ex) {
           JOptionPane.showConfirmDialog(null, ex.toString());
        }
}
void comprobarVencimiento(){
int user= Integer.parseInt(txtUser.getText());
String fechahoy = txtFecha.getText();

  try {
            
            
            Conexion cc = new Conexion();
            PreparedStatement ps;
            ResultSet rs;
            Connection cn = cc.Conexion();

            ps = cn.prepareStatement("SELECT UserName,nombre,horaEntrada,fechahoy FROM Entradas WHERE UserName=? and fechahoy=?");
            ps.setInt(1, user);
            ps.setString(2, fechahoy);
            rs = ps.executeQuery();
            
            if (rs.next()) {
                horaSalida.setText(horaActual());
               horaSalida();
               txtUser.setText("");
           }else{
               
                 visualizarUsario();
            
           }
        } catch (SQLException ex) {
    JOptionPane.showConfirmDialog(null, ex.toString());
        
        }
}
void horaSalida(){
  String sql = "";
        int user = Integer.parseInt(txtUser.getText());
        String hora = horaSalida.getText();
        

        sql = "UPDATE Entradas SET horaSalida=? WHERE UserName=?";

        try {
            Conexion cc = new Conexion();
        Connection cn = cc.Conexion();
            PreparedStatement pst = cn.prepareStatement(sql);

             pst.setString(1, hora);
            pst.setInt(2, user);
           
           

            int n = pst.executeUpdate();
            if (n > 0) {
               
               


  try {
            
            
            
            PreparedStatement ps;
            ResultSet rs;
           

            ps = cn.prepareStatement("SELECT Nombre,Apellidos,FechaDeIngreso,Fotografia,fechaPlan FROM Clientes WHERE UserName=?");
            ps.setInt(1, user);
            rs = ps.executeQuery();
            while (rs.next()) {
                
                
                txtNom.setText(rs.getString("Nombre"));
                txtApe.setText(rs.getString("Apellidos"));
                txtFe.setText(rs.getString("FechaDeIngreso"));
                byte[] imagen = rs.getBytes("Fotografia");
                foto.setImagen(imagen);
                
                txtVen.setText(rs.getString("fechaPlan"));
                
               calcularDiasRestantes(txtFecha.getText(),txtVen.getText());
              
            }
        } catch (SQLException ex) {
    JOptionPane.showConfirmDialog(null, ex.toString());
        
        }
            }

          
            
        } catch (SQLException ex) {
           JOptionPane.showConfirmDialog(null, ex.toString());
        }
}
/**
     * La Fecha debe de tener el formato yyyy-MM-dd
     *
     * @param inicio Se agrega la fecha inicial a calcular
     * @param fin Se agrega la fecha final para calcular los dias que pasan
     * entre la fecha inicio y la fecha final
     * @return
     */
  public String calcularDiasRestantes(String inicio,String fin) {
        int calcular;
        LocalDate fechaInicio = LocalDate.parse(inicio);
        LocalDate fechaFinal = LocalDate.parse(fin);
        
        long periodo = DAYS.between(fechaInicio, fechaFinal);
        
         if(periodo<0){
             periodo=0;
             txtDias.setText(String.valueOf(periodo));
         }else{
        txtDias.setText(String.valueOf(periodo));}
        return null;
       
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ingreso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Ingreso().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel;
    public static javax.swing.JLabel cerrar;
    private JPanelWebCam.JPanelWebCam foto;
    private javax.swing.JTextField horaEntrada;
    private javax.swing.JTextField horaSalida;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private rojerusan.RSTableMetro tablaProducto;
    private javax.swing.JTextField txtApe;
    private javax.swing.JTextField txtDias;
    private javax.swing.JTextField txtFe;
    private javax.swing.JTextField txtFecha;
    private javax.swing.JTextField txtNom;
    private javax.swing.JPasswordField txtUser;
    private javax.swing.JTextField txtVen;
    // End of variables declaration//GEN-END:variables
}
